#!/bin/bash

#
# Creator and Maintainer: AATHITH_RAJENDRAN
# Project: https://github.com/AATHITH/kubernetes/kubesort
# version: 0.3.0
#
#uncomment next line for debugging
# set -x

cmd=$4
option3=$4
[ -z "$cmd" ] && cmd="help";

pod () {
     declare -A arg
     arg[name]=".metadata.name"
     arg[status]=".status.phase"
     arg[restarts]=".status.containerStatuses[0].restartCount"
     arg[age]=".status.startTime"
     arg[ip]=".status.podIP"
     arg[node]=".spec.nodeName"
     option1="pod"
     option2=${arg[$cmd]}
}
deployment () {
     declare -A arg
     arg[name]=".metadata.name"
     arg[uptodate]=".status.updatedReplicas"
     arg[available]=".metadata.availableReplicas"
     arg[age]=".metadata.creationTimestamp"
     arg[containers]=".spec.template.spec.containers[*].name"
     arg[images]=".spec.template.spec.containers[*].image"
     option1="deployment"
     option2=${arg[$cmd]}
}
service () {
     declare -A arg
     arg[name]=".metadata.name"
     arg[type]=".spec.type"
     arg[clusterip]=".spec.clusterIP"
     arg[port]=".spec.ports[*].port"
     arg[age]=".metadata.creationTimestamp"
     option1="service"
     option2=${arg[$cmd]}
}
help () {
cat << EOF
   Missing something? need Help?
   kubesort option1 option2 option3

   Available options are
        option1:
        (po/pod/pods), (deployments/deployment/deploy), (svc/service/services)

                option2(po/pod/pods):
                name, status, restarts, age, ip, node

                option2(deployments/deployment/deploy):
                name, uptodate, available, age, containers, images

                option2(svc/service/services):
                name, type, clusterIP, externalIP, ports, age

                        option3: namespace-name or all
EOF
exit
}

if [[ "$1" = "kubectl" && "$2" = "get" ]];
then
  case "$3" in
    pod|pods|po)
      pod
    ;;
    deploy|deployments|deployment)
      deployment
    ;;
    svc|service|services)
      service
    ;;
    *)
      help
    ;;
  esac

  case "$#" in
     4)
     option3=default
     kubectl get $option1 --sort-by=$option2 -n $option3 -o wide
     ;;
     5)
     if [ $5 = "all" ];
     then
        option3="--all-namespaces"
        kubectl get $option1 --sort-by=$option2 $option3 -o wide
     else
        option3=$5
        kubectl get $option1 --sort-by=$option2 -n $option3 -o wide
     fi
     ;;
     *)
     help
     ;;
  esac
else
  help
fi
